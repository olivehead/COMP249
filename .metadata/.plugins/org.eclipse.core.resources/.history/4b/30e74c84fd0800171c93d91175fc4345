
// -----------------------------------------------------
// Assignment #3
// Part: 2
// Written by: Olivier D'Angelo #26729916
// -----------------------------------------------------

import java.io.*;
import java.util.Scanner;

public class BookInventory2 extends Book {
	private static Book[] bkArr;

	// Default constructor
	public BookInventory2() {
		bkArr = null;
	}

	// Copy constructor
	public BookInventory2(Book[] bkArr) {
		BookInventory2.bkArr = new Book[bkArr.length + 10];
		for (int i = 0; i < bkArr.length; i++) {
			BookInventory2.bkArr[i] = bkArr[i];
		}
	}

	// Add a maximum of 10 new records
	public static void addRecords(PrintWriter out) {
		Scanner kb = new Scanner(System.in);
		int userInput;
		boolean goodNumOfRecords = false;

		// Check validity of user input (not extensively)
		while (!goodNumOfRecords) {
			System.out.println("How many records do you wish to add?");
			userInput = kb.nextInt();
			if (userInput == 0) {
				System.out.println("No records will be added.");
				return;
			} else if (userInput < 0) {
				System.out.println("Number must be positive.");
			} else if (userInput > 10) {
				System.out.println("Cannot add more than 10 records.");
			} else {
				goodNumOfRecords = true;
			}

			for (int i = 0; i < userInput; i++) {
				long ISBN;
				String title;
				int issueYear;
				String authorName;
				double price;
				int numberOfPages;
				System.out.println("Record # " + (bkArr.length + i));
				System.out.println("\nPlease provide the following information:");
				System.out.print("ISBN: ");
				ISBN = kb.nextLong();
				bkArr[bkArr.length + i].ISBN = ISBN;
				System.out.print("\nTitle: ");
				System.out.print("\nYear issued: ");
				System.out.print("\nAuthor's name: ");
				System.out.print("\nPrice: ");
				System.out.print("\nNumber of pages: ");
			}

		}

	}

	// Must use buffereader***
	public static void displayFileContents(Scanner in) {

	}

	// returns ISBN bkArr index
	public int binaryBookSearch(Book[] bkArr, int startIndex, int endIndex, long ISBN) {
		return 1;
	}

	// increment index until ISBN is found. Increment counter for each
	// iteration.
	public static void sequentialBookSearch(Book[] bkArr, int startIndex, int endIndex, long ISBN) {
		int iterationNum = 0;

		for (int i = startIndex; i <= endIndex; i++) {
			iterationNum++;
			if (bkArr[i].ISBN == ISBN) {
				System.out.println("ISBN has been found in inventory record # " + i
						+ ".\n\nNumber of iterations to find solution: " + iterationNum);
				break;
			}
		}
		System.out.println("ISBN could not be found between record # " + startIndex + " and # " + endIndex + ".");
	}
}
